buildscript {
    dependencies {
        classpath 'com.google.gms:google-services:4.3.14'
    }
}// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '8.0.2' apply false
    id 'com.android.library' version '8.0.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.8.0' apply false
    id 'com.google.gms.google-services' version '4.3.13' apply false
    id 'com.google.firebase.crashlytics' version '2.9.1' apply false
}
// For all subprojects - generate compileSdkVersion, minSdkVersion,
// targetSdkVersion and Java compatibility
subprojects {
    afterEvaluate { project ->
        if (project.plugins.findPlugin('android') ?:
                project.plugins.findPlugin('android-library')) {
            android {
                compileSdkVersion Config.compile_sdk

                defaultConfig {
                    minSdkVersion Config.min_sdk
                    targetSdkVersion Config.target_sdk
                }
                compileOptions {
                    sourceCompatibility Config.java_version
                    targetCompatibility Config.java_version
                }
                buildTypes.each {
                    Properties properties = new Properties()
                    properties.load(project.rootProject.file( "url.properties" ).newDataInputStream ())
                    def url = properties.getProperty( "baseUrl" , "" )
                    it.buildConfigField "String" , "BASE_URL" , url
                }
                buildFeatures {
                    viewBinding = true
                    buildConfig = true
                }
                testOptions {
                    unitTests {
                        includeAndroidResources = true
                    }
                }
            }

            dependencies {

                //SplashScreen API
                implementation SplashScreen.core_splashscreen

                //Design
                implementation Design.appcompat
                implementation Design.material
                implementation Design.savedstate
                implementation Design.constraintlayout
                implementation Design.fragment_ktx
                implementation Design.ui_ktx
                implementation Design.swiperefreshlayout
                implementation Design.recyclerview
                implementation Design.viewmodel_ktx

                //Kotlin
                implementation Kotlin.core
                implementation Kotlin.coroutines_core
                implementation Kotlin.coroutines_android
                // Android X
                implementation(Kotlin.splash_screen)

                //Retrofit
                implementation Retrofit.retrofit
                implementation Retrofit.converter_gson
                implementation Retrofit.adapter_coroutines
                implementation Retrofit.logging_interceptor

                //Cicerone
                implementation Cicerone.cicerone

                //Glide
                implementation Glide.glideCompiler
                implementation Glide.glide



                //Firebase
                implementation platform (Firebase.firebaseBom)
                implementation Firebase.firebaseAuth
                implementation Firebase.firebaseDatabase
                implementation Firebase.crashlyticsKtx
                implementation Firebase.analyticsKtx
                implementation Firebase.databaseKtx

                //Tests
                testImplementation 'androidx.arch.core:core-testing:2.2.0'
                implementation 'com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2'
                testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'

                //Robolectric Tests
                testImplementation 'org.robolectric:robolectric:4.10.3'
                testImplementation 'androidx.test:core:1.5.0'
                testImplementation 'androidx.test:runner:1.5.2'
                testImplementation 'androidx.test.ext:junit:1.1.5'
                testImplementation 'androidx.test.ext:truth:1.5.0'
                testImplementation 'androidx.test.espresso:espresso-core:3.5.1'
                testImplementation 'androidx.test.espresso:espresso-intents:3.5.1'
                //Fragment Tests
                debugImplementation 'androidx.fragment:fragment-testing:1.6.1'

                //MPAndroidChart Графики
//                implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}